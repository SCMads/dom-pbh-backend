// test-regex-patterns.js - Teste dos padr√µes regex aprimorados
const { DOMPBHScraper } = require('./scraper');

// Dados de teste baseados no exemplo real do DOM PBH
const testContent = `
Exonera Ariadna Miranda Val√©rio Andrade, BM-324.917-2, do cargo em comiss√£o DAM 3, c√≥digo n¬∫ SMDE.DAM3.A.009
Exonera Breno Seroa da Motta, do cargo em comiss√£o de Diretor, c√≥digo n¬∫ DIR.0012
Exonera Nat√°lia Souza Diniz Alves, do cargo em comiss√£o DAM 4, c√≥digo n¬∫ SUDE.DAM4.L.008
Nomear Jo√£o Silva Santos, BM-123.456-7, para o cargo de Coordenador T√©cnico, c√≥digo n¬∫ COORD.TEC.001
Nomear Maria Fernanda Costa para o cargo de Assessora T√©cnica
`;

async function testRegexPatterns() {
  console.log('üß™ Testando padr√µes regex aprimorados...\n');
  
  const scraper = new DOMPBHScraper();
  
  // Criar item de teste
  const testItem = {
    title: 'DECRETO N¬∫ 18.456 - NOMEA√á√ïES E EXONERA√á√ïES',
    content: testContent,
    source: 'test'
  };
  
  // Processar com o novo m√©todo
  const result = scraper.processResult(testItem, 'nomea√ß√£o');
  
  console.log('üìä Resultado do processamento:');
  console.log('================================');
  console.log(`Tipo: ${result.type}`);
  console.log(`Categoria: ${result.category}`);
  console.log(`Fonte: ${result.source}`);
  
  if (result.movements && result.movements.length > 0) {
    console.log(`\n‚úÖ ${result.movements.length} movimento(s) extra√≠do(s):`);
    result.movements.forEach((movement, index) => {
      console.log(`\n${index + 1}. ${movement.type.toUpperCase()}`);
      console.log(`   Nome: ${movement.person}`);
      console.log(`   Matr√≠cula: ${movement.matricula || 'N/A'}`);
      console.log(`   Cargo: ${movement.position}`);
      console.log(`   C√≥digo: ${movement.code || 'N/A'}`);
    });
  } else {
    console.log('\n‚ùå Nenhum movimento extra√≠do');
  }
  
  console.log('\nüìã Campos de compatibilidade:');
  console.log(`   Person: ${result.person || 'N/A'}`);
  console.log(`   Matricula: ${result.matricula || 'N/A'}`);
  console.log(`   Position: ${result.position || 'N/A'}`);
  console.log(`   Job Code: ${result.jobCode || 'N/A'}`);
  console.log(`   Movement Type: ${result.movementType || 'N/A'}`);
  
  return result;
}

// Executar teste
if (require.main === module) {
  testRegexPatterns()
    .then(result => {
      console.log('\nüéØ Teste conclu√≠do com sucesso!');
      console.log(`Total de movimentos: ${result.movementCount || 0}`);
      process.exit(0);
    })
    .catch(error => {
      console.error('\n‚ùå Erro no teste:', error);
      process.exit(1);
    });
}

module.exports = { testRegexPatterns };